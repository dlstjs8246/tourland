<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.mngMappers.UserMapper">
<resultMap type="ReservationVO" id="userpayment">
	<id property="no" column="no"/>
 	<result property="rstatus" column="rstatus"/>
 	<result property="rdate" column="rdate"/>
 	<association property="userno" column="userno" javaType="UserVO">
 		<result property="username" column="username"/>
 	</association>
 	<association property="product" column="pno" javaType="ProductVO">
 		<id property="pno" column="pno"/>
 		<result property="pname" column="pname"/>
 		<collection property="air" ofType="AirplaneVO">
 			<result property="ano" column="ano"/>
 			<result property="ddate" column="ddate"/>
			<result property="rdate" column="rdate"/>
 		</collection>
 	</association>
</resultMap> 
<!-- 유저 추가  -->
  <insert id="insertUser" parameterType="UserVO"> 
     insert into user(userno, username, userbirth, usertel, useraddr, userpassport,  userid, userpass, usersecess) values
     (#{userno}, #{username}, #{userbirth}, #{usertel}, #{useraddr}, #{userpassport},  #{userid}, password(#{userpass}), 0)
  </insert>

<!-- 유저번호로 검색 -->
   <select id="readByNoUser" resultType="UserVO">
     select * from user
     where userno = #{userno} 
   </select> 

<!-- 유저아이디로 검색 -->
   <select id="readByIdPwUser" resultType="UserVO">
     select * from user
     where userid = #{userid} and userpass = password(#{userpass})
   </select> 
   
    <select id="readByIdUser" resultType="UserVO">
     select * from user
     where userid = #{userid}
   </select> 

<!-- 유저 정보 업데이트 -->
    <update id="updateUser" parameterType="UserVO">
       update user set 
       username =#{username}, userbirth=#{userbirth}, usertel=#{usertel}, 
       useraddr=#{useraddr}, userpassport=#{userpassport}, userpass=password(#{userpass})
       where userno=#{userno}
    </update> 

<!-- 유저 완전 삭제   -->
   <delete id="deleteUser">
       delete from user 
       where userno= #{userno}
   </delete>

<!-- 유저 전체 리스트 페이지  (탈퇴회원 분리)-->
    <select id="listCriteriaUser" resultType="UserVO">
      select * from user where usersecess=#{usersecess} order by userno desc limit #{cri.pageStart}, #{cri.perPageNum}
    </select>
  
    <!-- 리스트 위해 필요한 데이터 수  -->
    <select id="totalCountUser" resultType="int">
       select  count(userno) from user where usersecess=#{usersecess}  
    </select>

<!-- 검색 기능 -->
 <sql id="search">
  <where>
  	 usersecess=#{usersecess}
          <if test="cri.searchType=='userId'.toString()">
	       and userid like CONCAT('%',#{cri.keyword},'%')
	      </if>
	      <if test="cri.searchType=='userName'.toString()">
	       and username like CONCAT('%',#{cri.keyword},'%')
	      </if>
  </where>
 </sql>
 
  <sql id="paySearch">
  <where>
          <if test="searchType=='rdate'.toString()">
	       and rdate like CONCAT('%',#{keyword},'%')
	      </if>
  </where>
 </sql>
 
<!-- 검색으로 나타나는 리스트 부분 -->
    <select id="listSearchCriteriaUser" resultType="UserVO">
      select * from user 
      <include refid="search"></include>
      order by userno desc  limit #{cri.pageStart}, #{cri.perPageNum}
    </select>
	<!-- 검색한 결과 수  -->
	    <select id="totalSearchCountUser" resultType="int">
	        select  count(userno) from user
		    <include refid="search"/>  
	    </select>
	    
	    
	<!--이메일 보낼때 입력받은 값의 회원이 있는지 검사-->
	<select id="readByNameBirthTel" resultType="UserVO">
		select *
		from user
		where username=#{username} and userbirth=#{userbirth} and usertel=#{usertel};
	</select>
	
	
	<!--결제관리에 나올 리스트-->
    <select id="listSearchCriteriaPaymentUser" resultMap="userpayment">
	select r.no,r.userno, u.username, p.pno, p.pname, a.ano, a.ddate, a.rdate, r.rstatus
	from user u join reservation r on u.userno = r.userno 
				join userpstatus up on up.userno = u.userno and up.no = r.no
				join product p on p.pno = up.pno
				join pairstatus ps on ps.pno = p.pno 
				join airplane a on ps.ano = a.no
	where r.rstatus=2 
	<include refid="paySearch"></include>
	order by u.userno desc limit #{pageStart}, #{perPageNum}
    </select>

	<!-- 결제관리에서 검색한 결과 수  -->
    <select id="totalSearchCountPaymentUser" resultType="int">
        select count(userno) from reservation
        where rstatus = 2 
	    <include refid="paySearch"/>
    </select>
</mapper>